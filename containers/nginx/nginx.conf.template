#TODO:
# perform replacments to the following, converting to variables
# STRING:
#       HTTP://
# REPLACE ALL:
#       $scheme

# set the user to run under
# Default: nobody
user ${USER};  
#user www-data;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
# Default: 1
worker_processes  5;
worker_rlimit_nofile 8192;

events {
  worker_connections  ${WORKER_CONNECTIONS};  
}
http {
    ##
    # Basic Settings
    ##
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    include /etc/nginx/fastcgi.conf;
    #include /etc/nginx/conf.d/*.conf;

    # required for some VHOSTS
    server_names_hash_bucket_size 128; 

    #default_type application/octet-stream;
    #root     /usr/share/nginx/html;
    #index    index.html index.htm index.php;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    ##
    # SSL Settings
    ##

    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    #ssl_prefer_server_ciphers on;

    ##
    #Choose your proxy settings
    # Load from file or inline style
    ##
    #include    /etc/nginx/proxy.conf;
    #proxy_redirect          off;
    proxy_ssl_session_reuse off;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        Referer $http_referer;
    proxy_set_header        X-Forwarded-Proto $scheme;
    # DISABLED DURING DEVELOPMENT
    #proxy_cache_bypass $http_upgrade;
    #proxy_set_header X-NginX-Proxy true;
    client_max_body_size    10m;
    client_body_buffer_size 128k;
    proxy_connect_timeout   90;
    proxy_send_timeout      90;
    proxy_read_timeout      90;
    proxy_buffers           32 4k;

    ##
    # Logging Settings
    ##
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    ##
    # Encryption stuff
    ## LOL you have to generate the keys first!
    # then uncomment!
    #ssl_certificate /etc/letsencrypt/cert.crt;
    #ssl_certificate_key /etc/letsencrypt/keys/key.pem;

    ##
    # Logging Settings
    ##
    #access_log /var/log/nginx/access.log;
    #error_log /var/log/nginx/error.log;

    ##    
    # Gzip Settings
    ##    
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##
    #include /etc/nginx/sites-enabled/*;

    ######
    ## Upstream servers
    #######
    # upstream declarations. The server inside each of the upstreams represents 
    # where to find each of the applications.
    # The hostname must match the service name found in the docker-compose.yml 
    # file. By default, NGINX and Apache web servers broadcast on port 80, but
    # if youâ€™ve changed it, make sure to update the upstream server port.
    #upstream docker-login {
    #    server login:${LOGINPORT};
    #}
    upstream docker-bwapp {
        server 172.18.0.5:8081;
    }
    #upstream docker-webgoat {
    #    server webgoat:${WEEBGOATPORT};
    #}
    upstream docker-dvwa {
       server 172.18.0.6:8082;
    }
    #upstream moopboxen {
    #    server moopboxen.local;
    #}
    upstream docker-ctfd {
        server 172.18.0.7:8000;
    }
    server {
    listen 0.0.0.0:80;
    server_name moopboxen.local;
    return 301 http://$server_name$request_uri;
    rewrite ^/(.*) /$1 last;
    }
    #proxy_redirect $scheme://docker-bwapp $scheme://$host$request_uri;
    server {
        listen 80;
        listen 443 ;#ssl;
        server_name bwapp;
        index index.html index.htm index.php;
        default_type application/octet-stream;
        location ~ /bwapp {
            proxy_pass http://docker-bwapp;
            proxy_redirect off;
        }
    }
server {
        listen 80;
        listen 443;#ssl;
        server_name dvwa.moopboxen;
        index    index.html index.htm index.php;
        location ~ /dvwa {
            proxy_pass http://docker-dvwa;
            #proxy_redirect default;
            proxy_redirect off;
        }
    }
    server {
        listen 80;
        listen 443 ;#ssl;
        server_name ctfd;
        index    index.html index.htm index.php;
        location ~ /ctfd {
            proxy_pass http://docker-ctfd;
            #proxy_redirect http://docker-ctfd /;
            proxy_redirect default;
        }
    }    
}
    #server {
    #    listen 80;
    #    #listen 443 ssl;
    #    server_name webgoat;
    #    default_type application/octet-stream;
    #    index    index.html index.htm index.php;
    #    location ~ /webgoat {
    #        #rewrite ^/challenges/webgoat(.*) /$1 last;
    #        #proxy_pass http://docker-webgoat;
    #        proxy_pass http://localhost:${WEEBGOATPORT};
    #        #proxy_redirect http://localhost:${WEEBGOATPORT} / ;
    #        proxy_redirect default;

    #    }
    #}
    #server {
    #    listen 80;
        #listen 443 ssl;
        #server_name ${SERVER_NAME};
    #    index    index.html index.htm index.php;
    #    location ~ /challenges/multillidae2 {
    #        #rewrite ^/challenges/webgoat(.*) /$1 last;
    #        #proxy_pass http://docker-mutillidae2;
    #        proxy_pass http://localhost:${MUTILLIDAE2PORT};
    #        #proxy_redirect http://localhost:${MUTILLIDAE2PORT} / ;
    #        proxy_redirect default;
    #    }
    #}
