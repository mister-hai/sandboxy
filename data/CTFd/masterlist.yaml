!Repo:
crypto: !!python/object:ctfcli.core.category.Category
  Challenge_17f1fac02be406f95668b33db8983c496af3954664ab8435c66a067156a79853: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_17f1fac02be406f95668b33db8983c496af3954664ab8435c66a067156a79853
    __qualname__: Challenge_17f1fac02be406f95668b33db8983c496af3954664ab8435c66a067156a79853
    attempts: null
    author: iagox86
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    - challenge.yaml
    connection_info: null
    description: Reveal my identity! What's the flag encoded in the badge?
    files: null
    flags: CTF{way_too_common}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    - handout
    hints: null
    host: null
    id: &id001 !!python/name:builtins.int ''
    image: null
    installed: &id002 !!python/name:builtins.bool ''
    internalname: Challenge_17f1fac02be406f95668b33db8983c496af3954664ab8435c66a067156a79853
    jsonpayload: {}
    name: barcoder
    readme: null
    requirements: null
    scorepayload: {}
    script: &id003 !!python/name:builtins.str ''
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Forensics
    - '101'
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_350732370f8440b17994ab13ffd38bc3860187b5cd0e3943772de8d28d16b54b: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_350732370f8440b17994ab13ffd38bc3860187b5cd0e3943772de8d28d16b54b
    __qualname__: Challenge_350732370f8440b17994ab13ffd38bc3860187b5cd0e3943772de8d28d16b54b
    attempts: null
    author: SrishtiGohain
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    - challenge.yaml
    connection_info: null
    description: '''I was surfing the crimson wave and oh my gosh I was totally bugging.
      I also tried out the lilac hair trend but it didn''t work out.

      That''s not to say you are any better, you are a snob and a half. But let''s
      get back to the main question here-

      Who am I? (You don''t know my name)''


      Ciphertext = "52f41f58f51f47f57f49f48f5df46f6ef53f43f57f6cf50f6df53f53f40f58f51f6ef42f56f43f41f5ef5cf4e"
      (hex)

      Key = "12123"

      '
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files: null
    flags:
    - csictf{you_are_a_basic_person}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_350732370f8440b17994ab13ffd38bc3860187b5cd0e3943772de8d28d16b54b
    jsonpayload: {}
    name: Modern Clueless Child
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    topics: null
    typeof: dynamic
    value: 500
    version: null
  Challenge_48b54d817a125935cd7b2bb8974b0b7ca9632e2139b4edd7bd2523913feeae85: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_48b54d817a125935cd7b2bb8974b0b7ca9632e2139b4edd7bd2523913feeae85
    __qualname__: Challenge_48b54d817a125935cd7b2bb8974b0b7ca9632e2139b4edd7bd2523913feeae85
    attempts: null
    author: ashikka
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    - challenge.yaml
    connection_info: null
    description: "Ben has encrypted a message with the same value of 'e' for 3 public\
      \ moduli -\nn1 = 86812553978993\nn2 = 81744303091421 \nn3 = 83695120256591 \n\
      and got the cipher texts - \nc1 = 8875674977048\nc2 = 70744354709710\nc3 = 29146719498409.\n\
      Find the original message. (Wrap it with csictf{})\n"
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files: null
    flags:
    - csictf{h45t4d}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_48b54d817a125935cd7b2bb8974b0b7ca9632e2139b4edd7bd2523913feeae85
    jsonpayload: {}
    name: Quick Math
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    topics: null
    typeof: dynamic
    value: 500
    version: null
  Challenge_5a7639cb1c09b4159e22c4c94b4df528267c345717577d88ca9fe972b276b954: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_5a7639cb1c09b4159e22c4c94b4df528267c345717577d88ca9fe972b276b954
    __qualname__: Challenge_5a7639cb1c09b4159e22c4c94b4df528267c345717577d88ca9fe972b276b954
    attempts: null
    author: matir
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    - challenge.yaml
    connection_info: null
    description: '[Kerckhoffs''s principle](https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle)
      states that "A cryptosystem should be secure even if everything about the system,
      except the key, is public knowledge."  So here''s our unbreakable cipher.'
    files: null
    flags: null
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_5a7639cb1c09b4159e22c4c94b4df528267c345717577d88ca9fe972b276b954
    jsonpayload: {}
    name: decrypto-1
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Crypto
    - '101'
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_9c2c405852ad58597139ae17f80a3902b009b8f104b72a0dcb88022e511b9727: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_9c2c405852ad58597139ae17f80a3902b009b8f104b72a0dcb88022e511b9727
    __qualname__: Challenge_9c2c405852ad58597139ae17f80a3902b009b8f104b72a0dcb88022e511b9727
    attempts: null
    author: roerohan
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    - challenge.yaml
    connection_info: null
    description: These 3 guys encrypted my flag, but they didn't tell me how to decrypt
      it.
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files:
    - enc.txt
    flags:
    - csictf{sh0uld'v3_t4k3n_b1gg3r_pr1m3s}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_9c2c405852ad58597139ae17f80a3902b009b8f104b72a0dcb88022e511b9727
    jsonpayload: {}
    name: Rivest Shamir Adleman
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    topics: null
    typeof: dynamic
    value: 500
    version: null
  Challenge_9d5bcdc9443850d7f705c38ec5230c22883efed7c3e86e75019dea3a7774081e: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_9d5bcdc9443850d7f705c38ec5230c22883efed7c3e86e75019dea3a7774081e
    __qualname__: Challenge_9d5bcdc9443850d7f705c38ec5230c22883efed7c3e86e75019dea3a7774081e
    attempts: null
    author: matir
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    - challenge.yaml
    connection_info: null
    description: '[Kerckhoffs''s principle](https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle)
      states that "A cryptosystem should be secure even if everything about the system,
      except the key, is public knowledge."  So here''s our **really** unbreakable
      cipher.'
    files: null
    flags: null
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_9d5bcdc9443850d7f705c38ec5230c22883efed7c3e86e75019dea3a7774081e
    jsonpayload: {}
    name: decrypto-2
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Crypto
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_b6648a9eb88d867f19609235cd9b82d115b0ba1a894a9cc0c2442599dca39c9c: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_b6648a9eb88d867f19609235cd9b82d115b0ba1a894a9cc0c2442599dca39c9c
    __qualname__: Challenge_b6648a9eb88d867f19609235cd9b82d115b0ba1a894a9cc0c2442599dca39c9c
    attempts: null
    author: AJ147
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    - challenge.yaml
    connection_info: null
    description: "\"We have intercepted the enemy's communications, but unfortunately,\
      \ some data was corrupted during transmission. Can you recover the message?\"\
      \nM4 \nUKW $\nGamma 2 4 \n$ 5 9 \n$ 14 3 \n$ 5 20 \nfv cd hu ik es op yl wq\
      \ jm\n\n\"Ciphertext: zkrtwvvvnrkulxhoywoj\"\n(Words in the flag are separated\
      \ by underscores)\n"
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files: null
    flags:
    - csictf{no_shit_sherlock}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_b6648a9eb88d867f19609235cd9b82d115b0ba1a894a9cc0c2442599dca39c9c
    jsonpayload: {}
    name: Mein Kampf
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    - beginner
    topics: null
    typeof: dynamic
    value: 500
    version: null
  Challenge_b746db4dc5bf27830590079701ff4a753ea60490792542905a95e33cb4fd13fe: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_b746db4dc5bf27830590079701ff4a753ea60490792542905a95e33cb4fd13fe
    __qualname__: Challenge_b746db4dc5bf27830590079701ff4a753ea60490792542905a95e33cb4fd13fe
    attempts: null
    author: Pragati
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    - challenge.yaml
    connection_info: null
    description: The flag.zip contains the flag I am looking for but it is password
      protected. The password is the encrypted message which has to be correctly decrypted
      so I can useit to open the zip file. I tried using RSA but the zip doesn't open
      by it. Can you help me get the flag please?
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files:
    - crypto/little RSA/a.txt
    - crypto/little RSA/flag.zip
    flags:
    - csictf{gr34t_m1nds_th1nk_4l1ke}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_b746db4dc5bf27830590079701ff4a753ea60490792542905a95e33cb4fd13fe
    jsonpayload: {}
    name: little RSA
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: hidden
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    - RSA
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  Challenge_b7b607ee0bbfbdc8f9b764255e62930da990c77118eb5f30ca4ae78271f7d054: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_b7b607ee0bbfbdc8f9b764255e62930da990c77118eb5f30ca4ae78271f7d054
    __qualname__: Challenge_b7b607ee0bbfbdc8f9b764255e62930da990c77118eb5f30ca4ae78271f7d054
    attempts: null
    author: matir
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - anagrams
    - challenge.yaml
    connection_info: null
    description: Check out the BSidesSF CTF program.  We got a chance to put a puzzle
      in there. If you're good with permutations, you'll get this once.
    extra:
      decay: 100
      initial: 500
      minimum: 50
    files: null
    flags: CTF{ONEFORANAGRAMS}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - anagrams
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - anagrams
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - anagrams
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_b7b607ee0bbfbdc8f9b764255e62930da990c77118eb5f30ca4ae78271f7d054
    jsonpayload: {}
    name: anagrams
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: null
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - anagrams
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Misc
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  Challenge_c23f5d380165697e1bab49d7348abbe75ae5f44c805db0d490cc2bb405b88f46: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_c23f5d380165697e1bab49d7348abbe75ae5f44c805db0d490cc2bb405b88f46
    __qualname__: Challenge_c23f5d380165697e1bab49d7348abbe75ae5f44c805db0d490cc2bb405b88f46
    attempts: null
    author: matir
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-3
    - challenge.yaml
    connection_info: null
    description: Fine, I learned not to roll my own crypto.  I hear OpenSSL is good
      and easy to use, so I'll use that to encrypt my secrets.  Unfortunately, I keep
      crashing. Can you help me figure out what the bug is?
    files: null
    flags: null
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-3
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-3
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-3
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_c23f5d380165697e1bab49d7348abbe75ae5f44c805db0d490cc2bb405b88f46
    jsonpayload: {}
    name: decrypto-3
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-3
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-3
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Crypto
    - Reversing
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_e4dd07cfc028dc0f60400e4237aafaa9af32f393e316589210d8272e1b9f4f69: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_e4dd07cfc028dc0f60400e4237aafaa9af32f393e316589210d8272e1b9f4f69
    __qualname__: Challenge_e4dd07cfc028dc0f60400e4237aafaa9af32f393e316589210d8272e1b9f4f69
    attempts: null
    author: iagox86
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    - challenge.yaml
    connection_info: null
    description: Find the password encrypted in the configuration file
    files: null
    flags: null
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_e4dd07cfc028dc0f60400e4237aafaa9af32f393e316589210d8272e1b9f4f69
    jsonpayload: {}
    name: config-me
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Reversing
    - '101'
    topics: null
    typeof: standard
    value: 500
    version: null
  Challenge_f7da35fe3c580f116f2db849598aa0e9b7852ab5bc12755b1d5a047608fc4cac: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_f7da35fe3c580f116f2db849598aa0e9b7852ab5bc12755b1d5a047608fc4cac
    __qualname__: Challenge_f7da35fe3c580f116f2db849598aa0e9b7852ab5bc12755b1d5a047608fc4cac
    attempts: null
    author: ashikka and AJ1479
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    - challenge.yaml
    connection_info: null
    description: We are not lost, we're right here somewhere on this little blue line.
      Wait, why do I feel like I'm being watched?
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files:
    - theclimb.txt"
    - theclimb.java"
    flags:
    - csictf{hillshaveeyes}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_f7da35fe3c580f116f2db849598aa0e9b7852ab5bc12755b1d5a047608fc4cac
    jsonpayload: {}
    name: The Climb
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    topics: null
    typeof: dynamic
    value: 500
    version: null
  location: !!python/object/apply:pathlib.WindowsPath
  - C:\
  - Users
  - moop
  - Desktop
  - repositories
  - sandboxy
  - data
  - CTFd
  - challenges
  - crypto
  name: crypto
  tag: '!Category:'
