!Repo:
crypto: !!python/object:ctfcli.core.category.Category
  Challenge_17f1fac02be406f95668b33db8983c496af3954664ab8435c66a067156a79853: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_17f1fac02be406f95668b33db8983c496af3954664ab8435c66a067156a79853
    __qualname__: Challenge_17f1fac02be406f95668b33db8983c496af3954664ab8435c66a067156a79853
    attempts: null
    author: iagox86
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    - challenge.yaml
    connection_info: null
    description: Reveal my identity! What's the flag encoded in the badge?
    files: null
    flags:
    - CTF{way_too_common}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    - handout
    hints: null
    host: null
    id: &id001 !!python/name:builtins.int ''
    image: null
    installed: &id002 !!python/name:builtins.bool ''
    internalname: Challenge_17f1fac02be406f95668b33db8983c496af3954664ab8435c66a067156a79853
    jsonpayload: {}
    name: barcoder
    readme: null
    requirements: null
    scorepayload: {}
    script: &id003 !!python/name:builtins.str ''
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - barcoder
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Forensics
    - easy
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_350732370f8440b17994ab13ffd38bc3860187b5cd0e3943772de8d28d16b54b: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_350732370f8440b17994ab13ffd38bc3860187b5cd0e3943772de8d28d16b54b
    __qualname__: Challenge_350732370f8440b17994ab13ffd38bc3860187b5cd0e3943772de8d28d16b54b
    attempts: null
    author: SrishtiGohain
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    - challenge.yaml
    connection_info: null
    description: '''I was surfing the crimson wave and oh my gosh I was totally bugging.
      I also tried out the lilac hair trend but it didn''t work out.

      That''s not to say you are any better, you are a snob and a half. But let''s
      get back to the main question here-

      Who am I? (You don''t know my name)''


      Ciphertext = "52f41f58f51f47f57f49f48f5df46f6ef53f43f57f6cf50f6df53f53f40f58f51f6ef42f56f43f41f5ef5cf4e"
      (hex)

      Key = "12123"

      '
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files: null
    flags:
    - csictf{you_are_a_basic_person}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    - handout
    hints:
    - content: This hint costs points, points you can never get back! muahahaha!
      cost: 10
    - This hint is free
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_350732370f8440b17994ab13ffd38bc3860187b5cd0e3943772de8d28d16b54b
    jsonpayload: {}
    name: Modern Clueless Child
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Modern Clueless Child
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    topics: null
    typeof: dynamic
    value: 500
    version: null
  Challenge_48b54d817a125935cd7b2bb8974b0b7ca9632e2139b4edd7bd2523913feeae85: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_48b54d817a125935cd7b2bb8974b0b7ca9632e2139b4edd7bd2523913feeae85
    __qualname__: Challenge_48b54d817a125935cd7b2bb8974b0b7ca9632e2139b4edd7bd2523913feeae85
    attempts: null
    author: ashikka
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    - challenge.yaml
    connection_info: null
    description: "Ben has encrypted a message with the same value of 'e' for 3 public\
      \ moduli -\nn1 = 86812553978993\nn2 = 81744303091421 \nn3 = 83695120256591 \n\
      and got the cipher texts - \nc1 = 8875674977048\nc2 = 70744354709710\nc3 = 29146719498409.\n\
      Find the original message. (Wrap it with csictf{})\n"
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files: null
    flags:
    - csictf{h45t4d}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_48b54d817a125935cd7b2bb8974b0b7ca9632e2139b4edd7bd2523913feeae85
    jsonpayload: {}
    name: Quick Math
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Quick Math
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    - python
    - easy
    topics: null
    typeof: dynamic
    value: 500
    version: null
  Challenge_5a7639cb1c09b4159e22c4c94b4df528267c345717577d88ca9fe972b276b954: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_5a7639cb1c09b4159e22c4c94b4df528267c345717577d88ca9fe972b276b954
    __qualname__: Challenge_5a7639cb1c09b4159e22c4c94b4df528267c345717577d88ca9fe972b276b954
    attempts: null
    author: matir
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    - challenge.yaml
    connection_info: null
    description: '[Kerckhoffs''s principle](https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle)
      states that "A cryptosystem should be secure even if everything about the system,
      except the key, is public knowledge."  So here''s our unbreakable cipher.'
    files: null
    flags:
    - CTF{plz_dont_r0ll_ur_own_crypto}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_5a7639cb1c09b4159e22c4c94b4df528267c345717577d88ca9fe972b276b954
    jsonpayload: {}
    name: decrypto-1
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-1
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Crypto
    - python
    - easy
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_9c2c405852ad58597139ae17f80a3902b009b8f104b72a0dcb88022e511b9727: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_9c2c405852ad58597139ae17f80a3902b009b8f104b72a0dcb88022e511b9727
    __qualname__: Challenge_9c2c405852ad58597139ae17f80a3902b009b8f104b72a0dcb88022e511b9727
    attempts: null
    author: roerohan
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    - challenge.yaml
    connection_info: null
    description: These 3 guys encrypted my flag, but they didn't tell me how to decrypt
      it.
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files: null
    flags:
    - csictf{sh0uld'v3_t4k3n_b1gg3r_pr1m3s}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_9c2c405852ad58597139ae17f80a3902b009b8f104b72a0dcb88022e511b9727
    jsonpayload: {}
    name: Rivest Shamir Adleman
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Rivest Shamir Adleman
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    - python
    topics: null
    typeof: dynamic
    value: 500
    version: null
  Challenge_9d5bcdc9443850d7f705c38ec5230c22883efed7c3e86e75019dea3a7774081e: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_9d5bcdc9443850d7f705c38ec5230c22883efed7c3e86e75019dea3a7774081e
    __qualname__: Challenge_9d5bcdc9443850d7f705c38ec5230c22883efed7c3e86e75019dea3a7774081e
    attempts: null
    author: matir
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    - challenge.yaml
    connection_info: null
    description: '[Kerckhoffs''s principle](https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle)
      states that "A cryptosystem should be secure even if everything about the system,
      except the key, is public knowledge."  So here''s our **really** unbreakable
      cipher.'
    files: null
    flags:
    - CTF{but_even_I_couldnt_break_IT}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_9d5bcdc9443850d7f705c38ec5230c22883efed7c3e86e75019dea3a7774081e
    jsonpayload: {}
    name: decrypto-2
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - decrypto-2
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Crypto
    - python
    topics: null
    typeof: standard
    value: 500
    version: null
  Challenge_b6648a9eb88d867f19609235cd9b82d115b0ba1a894a9cc0c2442599dca39c9c: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_b6648a9eb88d867f19609235cd9b82d115b0ba1a894a9cc0c2442599dca39c9c
    __qualname__: Challenge_b6648a9eb88d867f19609235cd9b82d115b0ba1a894a9cc0c2442599dca39c9c
    attempts: null
    author: AJ147
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    - challenge.yaml
    connection_info: null
    description: "\"We have intercepted the enemy's communications, but unfortunately,\
      \ some data was corrupted during transmission. Can you recover the message?\"\
      \nM4 \nUKW $\nGamma 2 4 \n$ 5 9 \n$ 14 3 \n$ 5 20 \nfv cd hu ik es op yl wq\
      \ jm\n\n\"Ciphertext: zkrtwvvvnrkulxhoywoj\"\n"
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files: null
    flags:
    - csictf{no_shit_sherlock}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    - handout
    hints:
    - content: Words in the flag are separated by underscores
      cost: 100
    - This hint is free
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_b6648a9eb88d867f19609235cd9b82d115b0ba1a894a9cc0c2442599dca39c9c
    jsonpayload: {}
    name: Mein Kampf
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - Mein Kampf
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    - beginner
    topics: null
    typeof: dynamic
    value: 500
    version: null
  Challenge_b746db4dc5bf27830590079701ff4a753ea60490792542905a95e33cb4fd13fe: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_b746db4dc5bf27830590079701ff4a753ea60490792542905a95e33cb4fd13fe
    __qualname__: Challenge_b746db4dc5bf27830590079701ff4a753ea60490792542905a95e33cb4fd13fe
    attempts: null
    author: Pragati
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    - challenge.yaml
    connection_info: null
    description: The flag.zip contains the flag I am looking for but it is password
      protected. The password is the encrypted message which has to be correctly decrypted
      so I can useit to open the zip file. I tried using RSA but the zip doesn't open
      by it. Can you help me get the flag please?
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files: null
    flags:
    - csictf{gr34t_m1nds_th1nk_4l1ke}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    - handout
    hints:
    - content: Try looking up Wiener's attack
      cost: 50
    - This hint is free
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_b746db4dc5bf27830590079701ff4a753ea60490792542905a95e33cb4fd13fe
    jsonpayload: {}
    name: little RSA
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - little RSA
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    - RSA
    - easy
    topics: null
    typeof: dynamic
    value: 500
    version: null
  Challenge_b7b607ee0bbfbdc8f9b764255e62930da990c77118eb5f30ca4ae78271f7d054: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_b7b607ee0bbfbdc8f9b764255e62930da990c77118eb5f30ca4ae78271f7d054
    __qualname__: Challenge_b7b607ee0bbfbdc8f9b764255e62930da990c77118eb5f30ca4ae78271f7d054
    attempts: null
    author: matir
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - anagrams
    - challenge.yaml
    connection_info: null
    description: Check out the BSidesSF CTF program.  We got a chance to put a puzzle
      in there. If you're good with permutations, you'll get this once.
    extra:
      decay: 100
      initial: 500
      minimum: 50
    files: null
    flags: CTF{ONEFORANAGRAMS}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - anagrams
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - anagrams
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - anagrams
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_b7b607ee0bbfbdc8f9b764255e62930da990c77118eb5f30ca4ae78271f7d054
    jsonpayload: {}
    name: anagrams
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: null
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - anagrams
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - language
    - english
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  Challenge_e4dd07cfc028dc0f60400e4237aafaa9af32f393e316589210d8272e1b9f4f69: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_e4dd07cfc028dc0f60400e4237aafaa9af32f393e316589210d8272e1b9f4f69
    __qualname__: Challenge_e4dd07cfc028dc0f60400e4237aafaa9af32f393e316589210d8272e1b9f4f69
    attempts: null
    author: iagox86
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    - challenge.yaml
    connection_info: null
    description: Find the password encrypted in the configuration file
    files: null
    flags: CTF{my_rust_is_rusty}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_e4dd07cfc028dc0f60400e4237aafaa9af32f393e316589210d8272e1b9f4f69
    jsonpayload: {}
    name: config-me
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - config-me
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Reversing
    - rust
    - easy
    topics: null
    typeof: standard
    value: 500
    version: null
  Challenge_f7da35fe3c580f116f2db849598aa0e9b7852ab5bc12755b1d5a047608fc4cac: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_f7da35fe3c580f116f2db849598aa0e9b7852ab5bc12755b1d5a047608fc4cac
    __qualname__: Challenge_f7da35fe3c580f116f2db849598aa0e9b7852ab5bc12755b1d5a047608fc4cac
    attempts: null
    author: ashikka and AJ1479
    category: crypto
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    - challenge.yaml
    connection_info: null
    description: We are not lost, we're right here somewhere on this little blue line.
      Wait, why do I feel like I'm being watched?
    extra:
      decay: 450
      initial: 500
      minimum: 100
    files: null
    flags:
    - csictf{hillshaveeyes}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_f7da35fe3c580f116f2db849598aa0e9b7852ab5bc12755b1d5a047608fc4cac
    jsonpayload: {}
    name: The Climb
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - crypto
    - The Climb
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    - java
    - hill cipher
    topics: null
    typeof: dynamic
    value: 500
    version: null
  location: !!python/object/apply:pathlib.WindowsPath
  - C:\
  - Users
  - moop
  - Desktop
  - repositories
  - sandboxy
  - data
  - CTFd
  - challenges
  - crypto
  name: crypto
  tag: '!Category:'
forensics: !!python/object:ctfcli.core.category.Category
  Challenge_097c0082169f3514b8daf45692851050ce20eb19bb384298e0fb96191eb78da5: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_097c0082169f3514b8daf45692851050ce20eb19bb384298e0fb96191eb78da5
    __qualname__: Challenge_097c0082169f3514b8daf45692851050ce20eb19bb384298e0fb96191eb78da5
    attempts: null
    author: SrishtiGohain
    category: forensics
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - In Your Eyes
    - challenge.yml
    connection_info: null
    description: I talk of wondrous things I see, You picture purely out of imagination,
      You wonder how your light is spent, Days seem bright but you don't know for
      sure. I stand in your place and close my eyes, What do I see? (Open your windows
      to see the secret message)
    extra:
      decay: 50
      initial: 500
      minimum: 50
    files: null
    flags:
    - csictf{ucbr4ill3}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - In Your Eyes
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - In Your Eyes
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - In Your Eyes
    - handout
    hints:
    - content: braille encoded text
      cost: 100
    - open with a stego tool!
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_097c0082169f3514b8daf45692851050ce20eb19bb384298e0fb96191eb78da5
    jsonpayload: {}
    name: In Your Eyes
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: null
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - In Your Eyes
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - forensics
    - steganography
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  Challenge_3be7a505483c0050243c5cbad4700da13925aa4137a55e9e33efd8bc4d05850f: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_3be7a505483c0050243c5cbad4700da13925aa4137a55e9e33efd8bc4d05850f
    __qualname__: Challenge_3be7a505483c0050243c5cbad4700da13925aa4137a55e9e33efd8bc4d05850f
    attempts: null
    author: symmetric
    category: forensics
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - magic
    - challenge.yaml
    connection_info: null
    description: Much magic, so rainbow, wow!
    files: null
    flags: CTF{magical_unicorn_gait}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - magic
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - magic
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - magic
    - handout
    hints:
    - content: take a histogram to find the color
      cost: 50
    - open with a stego tool!
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_3be7a505483c0050243c5cbad4700da13925aa4137a55e9e33efd8bc4d05850f
    jsonpayload: {}
    name: magic
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - magic
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - magic
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Forensics
    topics: null
    typeof: standard
    value: 500
    version: null
  Challenge_4192dd56ef44e2e787648920ee53c2e3bb92b9fd7430b1807dd43093312544dc: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_4192dd56ef44e2e787648920ee53c2e3bb92b9fd7430b1807dd43093312544dc
    __qualname__: Challenge_4192dd56ef44e2e787648920ee53c2e3bb92b9fd7430b1807dd43093312544dc
    attempts: null
    author: roerohan
    category: forensics
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Archenemy
    - challenge.yaml
    connection_info: null
    description: John likes Arch Linux. What is he hiding?
    extra:
      decay: 50
      initial: 500
      minimum: 50
    files: null
    flags:
    - csictf{1_h0pe_y0u_don't_s33_m3_here}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Archenemy
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Archenemy
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Archenemy
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_4192dd56ef44e2e787648920ee53c2e3bb92b9fd7430b1807dd43093312544dc
    jsonpayload: {}
    name: Archenemy
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Archenemy
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Archenemy
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - forensics
    - steghide
    - john the ripper
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  Challenge_5e25943333030d82c3d65b06c2ed33d0e1dbe2838a8c41462ce30ad1e217376f: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_5e25943333030d82c3d65b06c2ed33d0e1dbe2838a8c41462ce30ad1e217376f
    __qualname__: Challenge_5e25943333030d82c3d65b06c2ed33d0e1dbe2838a8c41462ce30ad1e217376f
    attempts: null
    author: tangobeer
    category: forensics
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Gradient sky
    - challenge.yaml
    connection_info: null
    description: Gradient Skies is a beginner level forensics CTF challenge aimed
      towards rookies which can be solved which can be solved with basic steganography.
    extra:
      decay: 50
      initial: 500
      minimum: 50
    files:
    - forensics/Gradient sky/sky.jpg
    flags:
    - csictf{j0ker_w4snt_happy}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Gradient sky
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Gradient sky
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Gradient sky
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_5e25943333030d82c3d65b06c2ed33d0e1dbe2838a8c41462ce30ad1e217376f
    jsonpayload: {}
    name: Gradient sky
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: null
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Gradient sky
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - forensics
    - steganography
    - easy
    - binwalk
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  Challenge_6861ed54cbcdfd19f8df0900c376b65382e668e1f4d3c8927ec672d7d1247c77: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_6861ed54cbcdfd19f8df0900c376b65382e668e1f4d3c8927ec672d7d1247c77
    __qualname__: Challenge_6861ed54cbcdfd19f8df0900c376b65382e668e1f4d3c8927ec672d7d1247c77
    attempts: null
    author: symmetric
    category: forensics
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - earota
    - challenge.yaml
    connection_info: null
    description: "01\xCE\xB9"
    files: null
    flags: CTF{one_iota_away_from_riches}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - earota
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - earota
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - earota
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_6861ed54cbcdfd19f8df0900c376b65382e668e1f4d3c8927ec672d7d1247c77
    jsonpayload: {}
    name: earota
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - earota
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - earota
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Forensics
    - golang
    - go
    - multimedia
    - encoding
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_796c985cc82da7e0cb4bfcb45d43c893fbd29b79e7602fb7cb595b153aef731c: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_796c985cc82da7e0cb4bfcb45d43c893fbd29b79e7602fb7cb595b153aef731c
    __qualname__: Challenge_796c985cc82da7e0cb4bfcb45d43c893fbd29b79e7602fb7cb595b153aef731c
    attempts: null
    author: 21StWarlock
    category: forensics
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - unseen
    - challenge.yml
    connection_info: null
    description: With his dying breath, Prof. Ter Stegen hands us an image and a recording.
      He tells us that the image is least significant, but is a numerical key to the
      recording and the recording hides the answer. It may seem as though it's all
      for nothing, but trust me it's not. https://mega.nz/file/cmhnAQDB#9dbHojKcxzliZ5NAYtGBN7N8WHCqtoU7kKa5yuJzG0w
      https://mega.nz/file/h75UCIRJ#YGF3yCViKSQpwogmMgkdPQ1DXMez9Sv2DZBUWvCueSY
    extra:
      decay: 50
      initial: 500
      minimum: 50
    files: null
    flags:
    - csictf{7h47_15_h0w_y0u_c4n_83c0m3_1nv151813}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - unseen
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - unseen
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - unseen
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_796c985cc82da7e0cb4bfcb45d43c893fbd29b79e7602fb7cb595b153aef731c
    jsonpayload: {}
    name: unseen
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - unseen
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - unseen
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: hidden
    synched: *id002
    tag: '!Challenge:'
    tags:
    - forensics
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  Challenge_866f08119f6cb6770d41da98c5c7d78623883ba996c5455365d337b401bf85c7: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_866f08119f6cb6770d41da98c5c7d78623883ba996c5455365d337b401bf85c7
    __qualname__: Challenge_866f08119f6cb6770d41da98c5c7d78623883ba996c5455365d337b401bf85c7
    attempts: null
    author: symmetric
    category: forensics
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - mpfrag
    - challenge.yml
    connection_info: null
    description: Was MPEG ever good?
    files: null
    flags: CTF{bridge_ext2_gaps}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - mpfrag
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - mpfrag
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - mpfrag
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_866f08119f6cb6770d41da98c5c7d78623883ba996c5455365d337b401bf85c7
    jsonpayload: {}
    name: mpfrag
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - mpfrag
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - mpfrag
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Forensics
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_d7ecdf25eaf3deba0f2628771dbdd22d4138ab6cf38f91ed02a2ca0dec7c8ab7: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_d7ecdf25eaf3deba0f2628771dbdd22d4138ab6cf38f91ed02a2ca0dec7c8ab7
    __qualname__: Challenge_d7ecdf25eaf3deba0f2628771dbdd22d4138ab6cf38f91ed02a2ca0dec7c8ab7
    attempts: null
    author: corgi
    category: forensics
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - open-sesame
    - challenge.yml
    connection_info: null
    description: 'Can you crack the device password? I bet you can, cos'' you rock!
      P.s, flag is not in CTF{} format. If you run into an error when running the
      avd, make sure the pixel_2 skin is available. Device image: https://storage.googleapis.com/bsides-sf-ctf-2020-attachments/avd.zip'
    files: null
    flags: lifeinchinatown
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - open-sesame
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - open-sesame
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - open-sesame
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_d7ecdf25eaf3deba0f2628771dbdd22d4138ab6cf38f91ed02a2ca0dec7c8ab7
    jsonpayload: {}
    name: open-sesame
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - open-sesame
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - open-sesame
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Mobile
    - Forensics
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_f7d9ea7f3980635237d6ea58048057c33a218f2670e0ff45af5f4f670e9aa6f4: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_f7d9ea7f3980635237d6ea58048057c33a218f2670e0ff45af5f4f670e9aa6f4
    __qualname__: Challenge_f7d9ea7f3980635237d6ea58048057c33a218f2670e0ff45af5f4f670e9aa6f4
    attempts: null
    author: ashikka
    category: forensics
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Panda
    - challenge.yml
    connection_info: null
    description: I wanted to send this file to AJ1479 but I did not want anyone else
      to see what's inside it, so I protected it with a pin.
    extra:
      decay: 50
      initial: 500
      minimum: 50
    files:
    - forensics/Panda/panda.zip
    flags:
    - csictf{kung_fu_p4nd4}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Panda
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Panda
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Panda
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_f7d9ea7f3980635237d6ea58048057c33a218f2670e0ff45af5f4f670e9aa6f4
    jsonpayload: {}
    name: Panda
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: null
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - forensics
    - Panda
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: hidden
    synched: *id002
    tag: '!Challenge:'
    tags:
    - forensics
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  location: !!python/object/apply:pathlib.WindowsPath
  - C:\
  - Users
  - moop
  - Desktop
  - repositories
  - sandboxy
  - data
  - CTFd
  - challenges
  - forensics
  name: forensics
  tag: '!Category:'
miscellaneous: !!python/object:ctfcli.core.category.Category
  Challenge_3d8e29b3a696da046faf830cbe75e64a8435ff19505fb93dc649ac20d1cb9794: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_3d8e29b3a696da046faf830cbe75e64a8435ff19505fb93dc649ac20d1cb9794
    __qualname__: Challenge_3d8e29b3a696da046faf830cbe75e64a8435ff19505fb93dc649ac20d1cb9794
    attempts: null
    author: harsoh
    category: miscellaneous
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - Machine Fix
    - challenge.yml
    connection_info: null
    description: 'We ran a code on a machine a few years ago. It is still running
      however we forgot what it was meant for. It completed n=523693181734689806809285195318
      iterations of the loop and broke down. We want the answer but cannot wait a
      few more years. Find the answer after n iterations to get the flag.

      The flag would be of the format csictf{answer_you_get_from_above}.'
    extra:
      decay: 50
      initial: 500
      minimum: 50
    files:
    - miscellaneous/Machine Fix/code.py
    flags:
    - csictf{785539772602034710213927792950}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - Machine Fix
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - Machine Fix
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - Machine Fix
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_3d8e29b3a696da046faf830cbe75e64a8435ff19505fb93dc649ac20d1cb9794
    jsonpayload: {}
    name: Machine Fix
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - Machine Fix
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - Machine Fix
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: hidden
    synched: *id002
    tag: '!Challenge:'
    tags:
    - miscellaneous
    - algo
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  Challenge_8f18b5409b7741b41244bc0401a7ffcc01eaec23b8eb449a43957a700b338f3c: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_8f18b5409b7741b41244bc0401a7ffcc01eaec23b8eb449a43957a700b338f3c
    __qualname__: Challenge_8f18b5409b7741b41244bc0401a7ffcc01eaec23b8eb449a43957a700b338f3c
    attempts: null
    author: Matir
    category: miscellaneous
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - mini-matroyshka
    - challenge.yaml
    connection_info: null
    description: A lot of the computer world is just layers of abstraction.  Layers
      and layers and layers and layers and layers and layers and layers and layers
      and ... layers and layers and ...
    files: null
    flags: CTF{so_easy_an_ogre_could_do_it}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - mini-matroyshka
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - mini-matroyshka
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - mini-matroyshka
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_8f18b5409b7741b41244bc0401a7ffcc01eaec23b8eb449a43957a700b338f3c
    jsonpayload: {}
    name: mini-matroyshka
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - mini-matroyshka
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - miscellaneous
    - mini-matroyshka
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Misc
    topics: null
    typeof: standard
    value: 500
    version: beta1
  location: !!python/object/apply:pathlib.WindowsPath
  - C:\
  - Users
  - moop
  - Desktop
  - repositories
  - sandboxy
  - data
  - CTFd
  - challenges
  - miscellaneous
  name: miscellaneous
  tag: '!Category:'
reversing: !!python/object:ctfcli.core.category.Category
  Challenge_1ebe04d280ba028ce026ac0bd5cd350bd540413f9feb53237a08994f163301c7: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_1ebe04d280ba028ce026ac0bd5cd350bd540413f9feb53237a08994f163301c7
    __qualname__: Challenge_1ebe04d280ba028ce026ac0bd5cd350bd540413f9feb53237a08994f163301c7
    attempts: null
    author: AJ1479
    category: reversing
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Scrambled Eggs
    - challenge.yaml
    connection_info: null
    description: I like my eggs sunny side up, but I ended up scrambling them.
    extra:
      decay: 50
      initial: 500
      minimum: 50
    files:
    - reversing/Scrambled Eggs/scrambledeggs.py
    - reversing/Scrambled Eggs/scrambledeggs.txt
    flags:
    - csictf{all_the_kings_horses}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Scrambled Eggs
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Scrambled Eggs
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Scrambled Eggs
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_1ebe04d280ba028ce026ac0bd5cd350bd540413f9feb53237a08994f163301c7
    jsonpayload: {}
    name: Scrambled Eggs
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Scrambled Eggs
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Scrambled Eggs
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: hidden
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    - reversing
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  Challenge_2d62e7d1e987384761ace68734964d8b164176271c1fd92981e160f5d7f8451b: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_2d62e7d1e987384761ace68734964d8b164176271c1fd92981e160f5d7f8451b
    __qualname__: Challenge_2d62e7d1e987384761ace68734964d8b164176271c1fd92981e160f5d7f8451b
    attempts: null
    author: 21StWarlock#1598
    category: reversing
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - pydis2ctf
    - challenge.yaml
    connection_info: null
    description: I learnt Python in school but I have no clue what this is!
    extra:
      decay: 50
      initial: 500
      minimum: 50
    files:
    - reversing/pydis2ctf/encodedflag.txt
    - reversing/pydis2ctf/C1cipher.txt
    - reversing/pydis2ctf/C2cipher.txt
    flags:
    - csictf{T#a+_wA5_g0oD_d155aSe^^bLy}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - pydis2ctf
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - pydis2ctf
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - pydis2ctf
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_2d62e7d1e987384761ace68734964d8b164176271c1fd92981e160f5d7f8451b
    jsonpayload: {}
    name: pydis2ctf
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - pydis2ctf
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - pydis2ctf
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: hidden
    synched: *id002
    tag: '!Challenge:'
    tags:
    - reversing
    - ciphers
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  Challenge_4a832402101de1b3f176d1dfbe5ce47ff67efd22d711738e8bd6629ab466267f: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_4a832402101de1b3f176d1dfbe5ce47ff67efd22d711738e8bd6629ab466267f
    __qualname__: Challenge_4a832402101de1b3f176d1dfbe5ce47ff67efd22d711738e8bd6629ab466267f
    attempts: null
    author: itsC0rg1
    category: reversing
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker2
    - challenge.yaml
    connection_info: null
    description: You found the first flag, can you find the second one?
    files: null
    flags: CTF{T00_Many_S3cr3t5}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker2
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker2
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker2
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_4a832402101de1b3f176d1dfbe5ce47ff67efd22d711738e8bd6629ab466267f
    jsonpayload: {}
    name: toast-clicker2
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker2
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker2
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Mobile
    - Reversing
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_746c4a027e6ad633345a26c5417b7b004e24bf3e07d2b5dd3dc987f0b98ec6de: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_746c4a027e6ad633345a26c5417b7b004e24bf3e07d2b5dd3dc987f0b98ec6de
    __qualname__: Challenge_746c4a027e6ad633345a26c5417b7b004e24bf3e07d2b5dd3dc987f0b98ec6de
    attempts: null
    author: itsC0rg1
    category: reversing
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker3
    - challenge.yaml
    connection_info: null
    description: You are on a roll! Why not find the final flag hidden in the APK?
    files: null
    flags: CTF{makingbaconpancakes}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker3
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker3
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker3
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_746c4a027e6ad633345a26c5417b7b004e24bf3e07d2b5dd3dc987f0b98ec6de
    jsonpayload: {}
    name: toast-clicker3
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker3
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker3
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Mobile
    - Reversing
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_a75021e59f268fbe0f51194c49cdf15004b06c60701a05bd2d2b640482f49bff: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_a75021e59f268fbe0f51194c49cdf15004b06c60701a05bd2d2b640482f49bff
    __qualname__: Challenge_a75021e59f268fbe0f51194c49cdf15004b06c60701a05bd2d2b640482f49bff
    attempts: null
    author: Matir
    category: reversing
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - maltty
    - challenge.yaml
    connection_info: null
    description: In December of 2019, many of the hosts in the BSidesSF organization
      were compromised.  We think we traced it to this modified version of PuTTY,
      but we can't figure out what data was being sent.  When we analyze it on another
      host, we see nothing strange, but on the management hosts, we think it was beaconing
      home.  Can you find out what it was sending?
    files: null
    flags: CTF{notJustCCleaner}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - maltty
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - maltty
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - maltty
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_a75021e59f268fbe0f51194c49cdf15004b06c60701a05bd2d2b640482f49bff
    jsonpayload: {}
    name: maltty
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: null
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - maltty
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Reversing
    - Windows
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_afe341a793dae04a8a3830d4009700856040bc0f55053677f54c843e9b064ef7: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_afe341a793dae04a8a3830d4009700856040bc0f55053677f54c843e9b064ef7
    __qualname__: Challenge_afe341a793dae04a8a3830d4009700856040bc0f55053677f54c843e9b064ef7
    attempts: null
    author: itsC0rg1
    category: reversing
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker1
    - challenge.yaml
    connection_info: null
    description: A fun toast clicker game for your enjoyment. While you are at it,
      can you find the first flag?  Android challenge, one APK three flags
    files: null
    flags: CTF{Bready_To_Crumble}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker1
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker1
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker1
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_afe341a793dae04a8a3830d4009700856040bc0f55053677f54c843e9b064ef7
    jsonpayload: {}
    name: toast-clicker1
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker1
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - toast-clicker1
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Mobile
    - Reversing
    - Android
    - apk
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_df36a820a5dc8aa10e406346d2a0ff47574c7ece9c2ee026469b90e83f1a215a: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_df36a820a5dc8aa10e406346d2a0ff47574c7ece9c2ee026469b90e83f1a215a
    __qualname__: Challenge_df36a820a5dc8aa10e406346d2a0ff47574c7ece9c2ee026469b90e83f1a215a
    attempts: null
    author: iagox86
    category: reversing
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - strace-me
    - challenge.yaml
    connection_info: null
    description: This program seems to be sending us a hidden message. Can you find
      it?
    files: null
    flags: CTF{the_longer_the_flag_is_the_more_interesting_output_you_are_seeing_so_the_long_flag_is_long!}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - strace-me
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - strace-me
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - strace-me
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_df36a820a5dc8aa10e406346d2a0ff47574c7ece9c2ee026469b90e83f1a215a
    jsonpayload: {}
    name: strace-me
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - strace-me
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - strace-me
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - Reversing
    - '101'
    - easy
    topics: null
    typeof: standard
    value: 500
    version: beta1
  Challenge_ef846b8fd21e40fd7173a14798275968cf2af35d3ad9a3c448784a39964848f1: !!python/object:ctfcli.core.challenge.Challenge
    _Challenge__name: Challenge_ef846b8fd21e40fd7173a14798275968cf2af35d3ad9a3c448784a39964848f1
    __qualname__: Challenge_ef846b8fd21e40fd7173a14798275968cf2af35d3ad9a3c448784a39964848f1
    attempts: null
    author: roerohan
    category: reversing
    challengefile: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Esrever
    - challenge.yml
    connection_info: null
    description: I encrypted my flag so that nobody can see it, but now I realize
      I don't know how to decrypt it. Can you help me?
    extra:
      decay: 50
      initial: 500
      minimum: 50
    files: null
    flags:
    - csictf{esreverisjustreverseinreverseright}
    folderlocation: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Esrever
    handout: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Esrever
    - handout
    - handout.tar.gz
    handoutfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Esrever
    - handout
    hints: null
    host: null
    id: *id001
    image: null
    installed: *id002
    internalname: Challenge_ef846b8fd21e40fd7173a14798275968cf2af35d3ad9a3c448784a39964848f1
    jsonpayload: {}
    name: Esrever
    readme: null
    requirements: null
    scorepayload: {}
    script: *id003
    solution: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Esrever
    - solution
    - solution.tar.gz
    solutionfolder: !!python/object/apply:pathlib.WindowsPath
    - C:\
    - Users
    - moop
    - Desktop
    - repositories
    - sandboxy
    - data
    - CTFd
    - challenges
    - reversing
    - Esrever
    - solution
    solved_by_me: 'false'
    solves: *id001
    state: visible
    synched: *id002
    tag: '!Challenge:'
    tags:
    - crypto
    - reversing
    topics: null
    typeof: dynamic
    value: 500
    version: '0.1'
  location: !!python/object/apply:pathlib.WindowsPath
  - C:\
  - Users
  - moop
  - Desktop
  - repositories
  - sandboxy
  - data
  - CTFd
  - challenges
  - reversing
  name: reversing
  tag: '!Category:'
